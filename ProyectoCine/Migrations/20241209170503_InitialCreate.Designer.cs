// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoCine.Data;

#nullable disable

namespace ProyectoCine.Migrations
{
    [DbContext(typeof(CineContext))]
    [Migration("20241209170503_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoCine.Data.Butaca", b =>
                {
                    b.Property<int>("IdButaca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdButaca"));

                    b.Property<int>("IdSala")
                        .HasColumnType("int");

                    b.Property<string>("Letra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numeroButaca")
                        .HasColumnType("int");

                    b.HasKey("IdButaca");

                    b.HasIndex("IdSala");

                    b.ToTable("Butacas");
                });

            modelBuilder.Entity("ProyectoCine.Data.Genero", b =>
                {
                    b.Property<int>("IdGenero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGenero"));

                    b.Property<string>("TipoGenero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGenero");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("ProyectoCine.Data.Horario", b =>
                {
                    b.Property<int>("IdHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHorario"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("Hora")
                        .HasColumnType("time");

                    b.HasKey("IdHorario");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("ProyectoCine.Data.Pelicula", b =>
                {
                    b.Property<int>("IdPelicula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPelicula"));

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<int>("IdGenero")
                        .HasColumnType("int");

                    b.Property<int>("IdSala")
                        .HasColumnType("int");

                    b.Property<string>("Idioma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamePelicula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Subtitulada")
                        .HasColumnType("bit");

                    b.HasKey("IdPelicula");

                    b.HasIndex("IdGenero");

                    b.HasIndex("IdSala");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("ProyectoCine.Data.PeliculaGenero", b =>
                {
                    b.Property<int>("IdPeliculaGenero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPeliculaGenero"));

                    b.Property<int>("IdGenero")
                        .HasColumnType("int");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int");

                    b.HasKey("IdPeliculaGenero");

                    b.HasIndex("IdGenero");

                    b.HasIndex("IdPelicula");

                    b.ToTable("PeliculaGeneros");
                });

            modelBuilder.Entity("ProyectoCine.Data.PeliculaHorario", b =>
                {
                    b.Property<int>("IdPeliculaGenero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPeliculaGenero"));

                    b.Property<int>("IdHorario")
                        .HasColumnType("int");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int");

                    b.HasKey("IdPeliculaGenero");

                    b.HasIndex("IdHorario");

                    b.HasIndex("IdPelicula");

                    b.ToTable("PeliculaHorarios");
                });

            modelBuilder.Entity("ProyectoCine.Data.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReserva"));

                    b.Property<int>("IdPeliculaHorario")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdReserva");

                    b.HasIndex("IdPeliculaHorario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("ProyectoCine.Data.Sala", b =>
                {
                    b.Property<int>("IdSala")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSala"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.HasKey("IdSala");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("ProyectoCine.Data.Usuario", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProyectoCine.Data.Butaca", b =>
                {
                    b.HasOne("ProyectoCine.Data.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("IdSala")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("ProyectoCine.Data.Pelicula", b =>
                {
                    b.HasOne("ProyectoCine.Data.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("IdGenero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoCine.Data.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("IdSala")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");

                    b.Navigation("Sala");
                });

            modelBuilder.Entity("ProyectoCine.Data.PeliculaGenero", b =>
                {
                    b.HasOne("ProyectoCine.Data.Genero", "Genero")
                        .WithMany("PeliculaGeneros")
                        .HasForeignKey("IdGenero")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProyectoCine.Data.Pelicula", "Pelicula")
                        .WithMany("PeliculaGeneros")
                        .HasForeignKey("IdPelicula")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Genero");

                    b.Navigation("Pelicula");
                });

            modelBuilder.Entity("ProyectoCine.Data.PeliculaHorario", b =>
                {
                    b.HasOne("ProyectoCine.Data.Horario", "Horario")
                        .WithMany("PeliculaHorarios")
                        .HasForeignKey("IdHorario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoCine.Data.Pelicula", "Pelicula")
                        .WithMany("PeliculaHorarios")
                        .HasForeignKey("IdPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Horario");

                    b.Navigation("Pelicula");
                });

            modelBuilder.Entity("ProyectoCine.Data.Reserva", b =>
                {
                    b.HasOne("ProyectoCine.Data.PeliculaHorario", "PeliculaHorario")
                        .WithMany()
                        .HasForeignKey("IdPeliculaHorario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoCine.Data.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PeliculaHorario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProyectoCine.Data.Genero", b =>
                {
                    b.Navigation("PeliculaGeneros");
                });

            modelBuilder.Entity("ProyectoCine.Data.Horario", b =>
                {
                    b.Navigation("PeliculaHorarios");
                });

            modelBuilder.Entity("ProyectoCine.Data.Pelicula", b =>
                {
                    b.Navigation("PeliculaGeneros");

                    b.Navigation("PeliculaHorarios");
                });
#pragma warning restore 612, 618
        }
    }
}
